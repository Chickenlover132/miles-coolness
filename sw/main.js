let bareServer="tomp.app";importScripts("/sw/uv/uv.bundle.js"),importScripts("/sw/uv/uv.config.js"),importScripts("/sw/uv/uv.sw.js"),importScripts("/sw/dynamic/dynamic.config.js"),importScripts("/sw/dynamic/dynamic.worker.js"),addEventListener("install",(async function(t){t.waitUntil(self.skipWaiting());const e=await caches.open("astro-scripts");e.keys().then((async t=>{for(var{url:a}of t){const t=await e.match(a),i=await t.text();(0,eval)(`let moduleID = "${a.split("/").pop().split(".")[0]}";\n`+i)}}))})),addEventListener("activate",(function(t){t.waitUntil(self.clients.claim())}));const p=new Promise((async t=>{const e=await caches.open("astro-data");await e.match("/bare.txt")&&(bareServer=await(await e.match("/bare.txt")).text());try{const t=await fetch("http://"+bareServer.replace(/\/$/,"")+"/",{redirect:"follow"});self.__uv$config.bare=t.url,self.__dynamic$config.bare.path=t.url,console.log(t.url)}catch(t){console.log(t)}self.dynamic=new Dynamic(self.__dynamic$config),self.uv=new UVServiceWorker(self.__uv$config),t(await caches.open("astro-cache"))}));addEventListener("fetch",(function(t){t.respondWith(async function(){const e=await p;if(await e.match(t.request.url))return await e.match(t.request.url);if(t.request.url.endsWith("?sw=ignore"))return await fetch(t.request);if(t.request.url.startsWith(location.origin+"/~/uv/"))return await self.uv.fetch(t);if(await self.dynamic.route(t))return await self.dynamic.fetch(t);if("font"===t.request.destination||t.request.url.startsWith(location.origin+"/icons/games/")){var a;return await e.match(t.request.url)||(a=await fetch(t.request),await e.put(t.request.url,a.clone()),a)}return await fetch(t.request)}())}));